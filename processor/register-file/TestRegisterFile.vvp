#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_000001f02cab83c0 .scope module, "TestRegisterFile" "TestRegisterFile" 2 4;
 .timescale 0 0;
v000001f02cb274b0_0 .net "clk", 0 0, v000001f02cab7990_0;  1 drivers
v000001f02cb27190_0 .var "dataIn", 7 0;
v000001f02cb27230_0 .var "inAddress", 2 0;
v000001f02cb27550_0 .net "out1", 7 0, L_000001f02cab5e20;  1 drivers
v000001f02cb272d0_0 .var "out1Address", 2 0;
v000001f02cb275f0_0 .net "out2", 7 0, L_000001f02cab5e90;  1 drivers
v000001f02cb26ab0_0 .var "out2Address", 2 0;
v000001f02cb26b50_0 .var "reset", 0 0;
v000001f02cb26bf0_0 .var "write", 0 0;
S_000001f02cab9c50 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 2 50, 2 50 0, S_000001f02cab83c0;
 .timescale 0 0;
v000001f02ca7be90_0 .var/i "i", 31 0;
S_000001f02cab9de0 .scope module, "clock" "Clock" 2 12, 3 1 0, S_000001f02cab83c0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "clk";
v000001f02cab7990_0 .var "clk", 0 0;
S_000001f02cac5690 .scope module, "registerFile" "RegisterFile" 2 13, 4 1 0, S_000001f02cab83c0;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "dataIn";
    .port_info 1 /OUTPUT 8 "out1";
    .port_info 2 /OUTPUT 8 "out2";
    .port_info 3 /INPUT 3 "inAddress";
    .port_info 4 /INPUT 3 "out1Address";
    .port_info 5 /INPUT 3 "out2Address";
    .port_info 6 /INPUT 1 "write";
    .port_info 7 /INPUT 1 "clk";
    .port_info 8 /INPUT 1 "reset";
L_000001f02cab5e20/d .functor BUFZ 8, L_000001f02cb26dd0, C4<00000000>, C4<00000000>, C4<00000000>;
L_000001f02cab5e20 .delay 8 (2,2,2) L_000001f02cab5e20/d;
L_000001f02cab5e90/d .functor BUFZ 8, L_000001f02cb27050, C4<00000000>, C4<00000000>, C4<00000000>;
L_000001f02cab5e90 .delay 8 (2,2,2) L_000001f02cab5e90/d;
v000001f02ca92870_0 .net *"_ivl_0", 7 0, L_000001f02cb26dd0;  1 drivers
v000001f02ca92910_0 .net *"_ivl_10", 4 0, L_000001f02cb26f10;  1 drivers
L_000001f02cb278e0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v000001f02ca929b0_0 .net *"_ivl_13", 1 0, L_000001f02cb278e0;  1 drivers
v000001f02ca92a50_0 .net *"_ivl_2", 4 0, L_000001f02cb26e70;  1 drivers
L_000001f02cb27898 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v000001f02cb27370_0 .net *"_ivl_5", 1 0, L_000001f02cb27898;  1 drivers
v000001f02cb26c90_0 .net *"_ivl_8", 7 0, L_000001f02cb27050;  1 drivers
v000001f02cb26970_0 .net "clk", 0 0, v000001f02cab7990_0;  alias, 1 drivers
v000001f02cb268d0_0 .net "dataIn", 7 0, v000001f02cb27190_0;  1 drivers
v000001f02cb26a10_0 .net "inAddress", 2 0, v000001f02cb27230_0;  1 drivers
v000001f02cb270f0_0 .net "out1", 7 0, L_000001f02cab5e20;  alias, 1 drivers
v000001f02cb26d30_0 .net "out1Address", 2 0, v000001f02cb272d0_0;  1 drivers
v000001f02cb27690_0 .net "out2", 7 0, L_000001f02cab5e90;  alias, 1 drivers
v000001f02cb27730_0 .net "out2Address", 2 0, v000001f02cb26ab0_0;  1 drivers
v000001f02cb27410 .array "registerArray", 0 7, 7 0;
v000001f02cb26fb0_0 .net "reset", 0 0, v000001f02cb26b50_0;  1 drivers
v000001f02cb277d0_0 .net "write", 0 0, v000001f02cb26bf0_0;  1 drivers
E_000001f02cab94d0 .event posedge, v000001f02cab7990_0;
L_000001f02cb26dd0 .array/port v000001f02cb27410, L_000001f02cb26e70;
L_000001f02cb26e70 .concat [ 3 2 0 0], v000001f02cb272d0_0, L_000001f02cb27898;
L_000001f02cb27050 .array/port v000001f02cb27410, L_000001f02cb26f10;
L_000001f02cb26f10 .concat [ 3 2 0 0], v000001f02cb26ab0_0, L_000001f02cb278e0;
S_000001f02cac58c0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 23, 4 23 0, S_000001f02cac5690;
 .timescale 0 0;
v000001f02cac5a50_0 .var/i "i", 31 0;
    .scope S_000001f02cab9de0;
T_0 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001f02cab7990_0, 0, 1;
T_0.0 ;
    %delay 5, 0;
    %load/vec4 v000001f02cab7990_0;
    %inv;
    %store/vec4 v000001f02cab7990_0, 0, 1;
    %jmp T_0.0;
    %end;
    .thread T_0;
    .scope S_000001f02cac5690;
T_1 ;
    %wait E_000001f02cab94d0;
    %delay 1, 0;
    %load/vec4 v000001f02cb277d0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %load/vec4 v000001f02cb268d0_0;
    %load/vec4 v000001f02cb26a10_0;
    %pad/u 5;
    %ix/vec4 4;
    %store/vec4a v000001f02cb27410, 4, 0;
T_1.0 ;
    %jmp T_1;
    .thread T_1;
    .scope S_000001f02cac5690;
T_2 ;
    %wait E_000001f02cab94d0;
    %delay 1, 0;
    %load/vec4 v000001f02cb26fb0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %fork t_1, S_000001f02cac58c0;
    %jmp t_0;
    .scope S_000001f02cac58c0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001f02cac5a50_0, 0, 32;
T_2.2 ;
    %load/vec4 v000001f02cac5a50_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.3, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001f02cac5a50_0;
    %store/vec4a v000001f02cb27410, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001f02cac5a50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001f02cac5a50_0, 0, 32;
    %jmp T_2.2;
T_2.3 ;
    %end;
    .scope S_000001f02cac5690;
t_0 %join;
T_2.0 ;
    %jmp T_2;
    .thread T_2;
    .scope S_000001f02cab83c0;
T_3 ;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001f02cb26b50_0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001f02cb26b50_0, 12;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v000001f02cb272d0_0, 13;
    %pushi/vec4 1, 0, 3;
    %assign/vec4 v000001f02cb26ab0_0, 13;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001f02cb26bf0_0, 17;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v000001f02cb27230_0, 17;
    %pushi/vec4 24, 0, 8;
    %assign/vec4 v000001f02cb27190_0, 17;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001f02cb26bf0_0, 21;
    %delay 40, 0;
    %vpi_call 2 33 "$finish" {0 0 0};
    %end;
    .thread T_3;
    .scope S_000001f02cab83c0;
T_4 ;
    %vpi_call 2 47 "$dumpfile", "TestRegisterFile.vcd" {0 0 0};
    %vpi_call 2 48 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001f02cab83c0 {0 0 0};
    %fork t_3, S_000001f02cab9c50;
    %jmp t_2;
    .scope S_000001f02cab9c50;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001f02ca7be90_0, 0, 32;
T_4.0 ;
    %load/vec4 v000001f02ca7be90_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_4.1, 5;
    %vpi_call 2 51 "$dumpvars", 32'sb00000000000000000000000000000001, &A<v000001f02cb27410, v000001f02ca7be90_0 > {0 0 0};
    %load/vec4 v000001f02ca7be90_0;
    %addi 1, 0, 32;
    %store/vec4 v000001f02ca7be90_0, 0, 32;
    %jmp T_4.0;
T_4.1 ;
    %end;
    .scope S_000001f02cab83c0;
t_2 %join;
    %end;
    .thread T_4;
    .scope S_000001f02cab83c0;
T_5 ;
    %vpi_call 2 57 "$display" {0 0 0};
    %vpi_call 2 58 "$display", "********************  TEST RegisterFile  ********************" {0 0 0};
    %vpi_call 2 59 "$display", "time\011r0\011r1\011r2\011r3\011r4\011r5\011r6\011r7\011out1Addr\011out2Addr\011inAddr\011dataIn\011out1\011out2\011write\011reset" {0 0 0};
    %vpi_call 2 60 "$monitor", "%4t\011%2d\011%2d\011%2d\011%2d\011%2d\011%2d\011%2d\011%2d\011%8d\011%8d\011%6d\011%6d\011%4d\011%4d\011%5d\011%5d", $time, &A<v000001f02cb27410, 0>, &A<v000001f02cb27410, 1>, &A<v000001f02cb27410, 2>, &A<v000001f02cb27410, 3>, &A<v000001f02cb27410, 4>, &A<v000001f02cb27410, 5>, &A<v000001f02cb27410, 6>, &A<v000001f02cb27410, 7>, v000001f02cb272d0_0, v000001f02cb26ab0_0, v000001f02cb27230_0, v000001f02cb27190_0, v000001f02cb27550_0, v000001f02cb275f0_0, v000001f02cb26bf0_0, v000001f02cb26b50_0 {0 0 0};
    %end;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "TestRegisterFile.v";
    "./../clock/Clock.v";
    "./RegisterFile.v";
